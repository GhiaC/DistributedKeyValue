cluster-sharding {
  number-of-entity = 10
  number-of-shards = 3
  one-key-per-actor = "off"
}
tester{
  GRPCSpec{
    host = "localhost"
    port = 2471
  }
}
//akka.persistence.journal.plugin = "cassandra-journal"
//akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

akka.actor.warn-about-java-serializer-usage = off
akka.http.server.preview.enable-http2 = on

akka {

  # Log at info level when messages are sent to dead letters.
  # Possible values:
  # on: all dead letters are logged
  # off: no logging of dead letters
  # n: positive integer, number of dead letters that will be logged
  log-dead-letters = 10

  # Possibility to turn off logging of dead letters while the actor system
  # is shutting down. Logging is only done when enabled by 'log-dead-letters'
  # setting.
  log-dead-letters-during-shutdown = off


  actor {
    provider = cluster
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
    //    use-passive-connections = on

  }
  # options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"

  //  akka.persistence.journal.plugin = "cassandra-journal"

  cluster {
    seed-nodes = []

    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
//    auto-down-unreachable-after = 10s
    //    sharding.state-store-mode = persistence
    jmx.multi-mbeans-in-same-jvm = on
  }
}


akka {
  persistence {
    journal.plugin = "pg-journal"
    snapshot-store.plugin = "pg-snapshot"
  }
}

pg-persistence {
  db {
    user = "postgres"
    password = "mghiasi"
    url = "jdbc:postgresql://localhost:5444/per4"
  }
}
