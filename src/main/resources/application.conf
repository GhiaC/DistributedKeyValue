server {
  gRPCServerPort = 21000
  cluster-sharding {
    number-of-entity = 100
    number-of-shards = 10
    one-key-per-actor = "off"
  }
}

tester {
  GRPCSpec {
    host = "localhost"
    port = 21000
  }
}
akka.persistence.journal.plugin = "cassandra-journal"
akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

cassandra-journal.contact-points = ["localhost"]

cassandra-snapshot-store.contact-points = ["localhost"]

cassandra-journal.keyspace = "masoud"

//cassandra-journal.authentication.username = "cassandra"
//cassandra-journal.authentication.password = "cassandra"

cassandra-snapshot-store.port = 9042
cassandra-journal.port = 9042

akka.actor.warn-about-java-serializer-usage = off

akka {
  log-dead-letters = 10
  log-dead-letters-during-shutdown = off

  actor {
    provider = cluster
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "localhost"
      port = 2600
    }
    //    use-passive-connections = on

  }
  # options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@localhost:2600"
    ]

    jmx.multi-mbeans-in-same-jvm = on
  }
}


//akka {
//  persistence {
//    journal.plugin = "pg-journal"
//    snapshot-store.plugin = "pg-snapshot"
//  }
//}
//
//pg-persistence {
//  db {
//    user = "postgres"
//    password = "mghiasi"
//    url = "jdbc:postgresql://localhost:5444/per4"
//  }
//}


lati {
  cluster {
    remote {
      host = "127.0.0.1" // cluster node host
      port = 3002 // cluster node port
      leader-host = "127.0.0.1" // cluster leader node host
      leader-port = 3002 // cluster leader node port
    }
  }
  cli {
    remote {
      host = "127.0.0.1" // cli host
      port = 4002 // cli port
      // cluster nodes addresses
      nodes = [
        "127.0.0.1:3002"
      ]
    }
  }
  option {
    // numbers of shards in cluster
    shards-number = 10 // 10 shard for all cluster nodes
    // maximum virtual users in total nodes
    max-virtual-users = 10000 // maximum virtual users
    // maximum user per node
    max-users-per-node = 10000 // 10000 users per mode
    // maximum scenario duration time
    max-duration-time = 1800000 // 30 minutes
    // Static timeout for get answer
    static-timeout = 5000 // 5 second
    // Up users rate
    user-up-rate = 1000
    // Before scenario method run rate
    before-scenario-rate = 1000
    // Timeout for run rour beforeScenario function
    before-scenario-timeout = 5000 // 5 second
    // Timeout for run rour afterScenario function
    after-scenario-timeout = 5000 // 5 second
    // Delay for start your scenario after run beforeScenario function
    start-scenario-delay = 10000 // 10 second
  }
}
